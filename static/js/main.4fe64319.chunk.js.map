{"version":3,"sources":["Component/Main/Content/ContentWithProps.module.css","Component/Footer/Footer.tsx","hook/useHttp.ts","Component/Header/Preloader/Preloader.tsx","Contecst/DataContecst.tsx","hook/useAlert.ts","Component/Header/FromContoroll/From.tsx","Component/Header/Header.tsx","assets/404.png","Component/Main/Content/DefoulContent.tsx","assets/options.tsx","Component/Main/Content/ContentWithProps.tsx","assets/spiner.svg","Component/Main/Content/PreloaderPage.tsx","Component/Main/Main.tsx","App.tsx","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","footerContainer","paddingTop","spacing","paddingBottom","marginTop","Footer","classes","className","Typography","align","color","component","variant","useHttp","useState","loading","setLoading","error","setError","request","useCallback","a","value","page","url","key","fetch","response","json","data","ok","Error","message","clearError","createStyles","root","position","bottom","left","width","Preloader","LinearProgress","DataContext","createContext","state","images","total","searchValue","currentPage","DataProvider","children","useReducer","action","type","payload","dispatch","Provider","actions","setImage","setSearchValue","clearStateImage","setCurrentPage","useData","useContext","useAlert","SweetAlert","useEffect","Swal","fire","icon","title","text","footer","padding","display","alignItems","input","marginLeft","flex","iconButton","divider","height","margin","SearchPanel","setValue","Paper","onSubmit","e","preventDefault","hits","getImages","IconButton","aria-label","Divider","orientation","InputBase","onChange","target","onChangeInput","placeholder","inputProps","justifyContent","Header","AppBar","Container","fixed","Toolbar","useStyle","cardMedia","textAlign","DefaultContent","src","errorPage","alt","options","settings","overlayColor","autoplaySpeed","transitionSpeed","buttons","backgroundColor","iconColor","caption","captionColor","captionFontFamily","captionFontWeight","captionTextTransform","card","animation","wrapperGrid","ContentWithProps","img","Grid","container","map","item","xs","sm","md","Card","styles","link","href","largeImageURL","wrapper","previewURL","tags","id","PreloaderPage","spiner","mainContent","cardGrid","button","TableSection","showBtn","setShowBtn","imgS","setImgS","setPage","filter","index","array","findIndex","addImage","maxWidth","length","name","Button","disabled","onClick","Scroll","scrollTo","duration","delay","smooth","offset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fe64319.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContentWithProps_wrapper__1uUXk\",\"link\":\"ContentWithProps_link__3hsXc\"};","import React from \"react\";\r\nimport {Typography,} from \"@material-ui/core/\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n        footerContainer: {\r\n            paddingTop: theme.spacing(4),\r\n            paddingBottom: theme.spacing(4),\r\n            marginTop: 'auto',\r\n        }\r\n    })\r\n)\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.footerContainer}>\r\n            <Typography\r\n                align=\"center\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n                variant=\"subtitle1\">\r\n            Made By Saurocket))\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request: any = useCallback(async (value = '', page = 1) => {\r\n        const url = 'https://pixabay.com/api/'\r\n        const key = '21822388-90e2619eec9f9ca7d32baa228'\r\n        setLoading(true)\r\n\r\n    try {\r\n        const response = await fetch(`${url}?q=${value}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`)\r\n        const data = await response.json()\r\n        if (!response.ok) {\r\n            throw new Error(data.message || 'something went not well')\r\n        }\r\n        setLoading(false)\r\n        return data\r\n    }\r\n    catch (e) {\r\n        setLoading(false)\r\n        setError(e.message)\r\n        throw e\r\n    }\r\n    },[])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n    return {loading, request, error, clearError }\r\n}","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: 'absolute',\r\n            bottom: '-25px',\r\n            left: '-1px',\r\n            width: '100%',\r\n            '& > * + *': {\r\n                marginTop: theme.spacing(2),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport const Preloader = () =>  {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgress />\r\n        </div>\r\n    );\r\n}","import React, {createContext, useContext, useReducer} from 'react'\r\n\r\nimport {InferActionTypes, SetImageType, StateType} from \"./TypesContecst\";\r\n\r\n\r\n\r\n\r\n\r\nconst DataContext = createContext({\r\n  state: {\r\n      images: [],\r\n      total: 0,\r\n      searchValue: null,\r\n      currentPage: 1,\r\n  } as StateType,\r\n})\r\n\r\nexport const DataProvider = ({children}: any) => {\r\n    const initialState:StateType = {\r\n        images: [],\r\n        total: 0,\r\n        searchValue: 'girl',\r\n        currentPage:1\r\n    }\r\n\r\n    const reducer = (state:StateType, action: ActionType) => {\r\n        switch (action.type) {\r\n            case 'SET_IMAGES' : {\r\n                return  {...state, total: action.payload.total, images: [...state.images, ...action.payload.images]}\r\n            }\r\n            case 'SET_SEARCH_VALUE': {\r\n                return {...state, searchValue: action.payload}\r\n            }\r\n            case 'CLEAR_STATE':{\r\n                return {...state, images: [], currentPage: 1, total: 0}\r\n            }\r\n            case 'SET_CURRENT_PAGE': {\r\n                return {...state, currentPage: action.payload}\r\n            }\r\n            default: return state\r\n        }\r\n    }\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n\r\n\r\n    const actions = {\r\n        setImage: (payload:SetImageType) => ({type: 'SET_IMAGES',payload} as const),\r\n        setSearchValue: (payload: string) => ({type: 'SET_SEARCH_VALUE', payload} as const),\r\n        clearStateImage: () => ({type: 'CLEAR_STATE'} as const),\r\n        setCurrentPage: (payload: number) => ({type: 'SET_CURRENT_PAGE', payload} as const)\r\n    }\r\n    type ActionType = InferActionTypes<typeof actions>\r\n\r\n\r\n\r\n\r\n\r\n    // @ts-ignore\r\n    return <DataContext.Provider value={{state, actions, dispatch}}>\r\n        {children}\r\n    </DataContext.Provider>\r\n}\r\n\r\nexport const useData = () => useContext(DataContext)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport {useEffect} from \"react\";\r\n\r\n\r\nexport const  useAlert = () => {\r\n    const SweetAlert = (error: any, clearError:() => void) => {\r\n        useEffect(() => {\r\n            if (error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Something went wrong!',\r\n                    footer: `<a href=\"#\">${error}</a>`\r\n                })\r\n            }\r\n            clearError()\r\n        },[error, clearError])\r\n    }\r\n    return {SweetAlert}\r\n}","import React, {ChangeEvent, FormEvent, useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {useHttp} from \"../../../hook/useHttp\";\r\nimport {Preloader} from \"../Preloader/Preloader\";\r\nimport {useData} from \"../../../Contecst/DataContecst\";\r\nimport {useAlert} from \"../../../hook/useAlert\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            padding: '2px 4px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: 400,\r\n            position: 'relative'\r\n        },\r\n        input: {\r\n            marginLeft: theme.spacing(1),\r\n            flex: 1,\r\n        },\r\n        iconButton: {\r\n            padding: 10,\r\n        },\r\n        divider: {\r\n            height: 28,\r\n            margin: 4,\r\n        },\r\n    }),\r\n);\r\n\r\nexport const SearchPanel = () => {\r\n    const classes = useStyles();\r\n\r\n    const {SweetAlert} = useAlert() //Кастомный хук который будет выводить нам ошибки при запросе на сервер\r\n    const {actions, dispatch, state}:any = useData(); //Наш контект с ашенкреетерами, и диспатчем\r\n    const {request, loading, error, clearError} = useHttp() //Запрос на сервак вынес в отдельный хук, так как его буем зать и в другой компоненте.\r\n    const [value, setValue] = useState<string>(state.searchValue) // состояние нашего инпута\r\n\r\n\r\n    const onChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value)\r\n    }\r\n\r\n\r\n    const onSubmit = (e:FormEvent<HTMLDivElement>) => {\r\n        e.preventDefault()\r\n        const getImages = async () => {\r\n            try {\r\n                const images = await request(value)\r\n                dispatch(actions.setSearchValue(value)) //диспатчим строку поиска в стэйт\r\n                dispatch(actions.clearStateImage()) // чистим массив картинок, если в нем что-то есть в нашем стэйте\r\n                dispatch(actions.setImage({images:images.hits, total:images.total})) //диспатчим весь поллученный массив в стейт\r\n            }catch (e) {\r\n                throw e\r\n            }\r\n        }\r\n        getImages()\r\n    }\r\n    SweetAlert(error,clearError) // выводим ошибки если они будут\r\n\r\n    return (\r\n        <Paper\r\n            component=\"form\"\r\n            className={classes.root}\r\n            onSubmit={(e:FormEvent<HTMLDivElement>) => onSubmit(e)}\r\n        >\r\n            <IconButton\r\n                type=\"submit\"\r\n                className={classes.iconButton}\r\n                aria-label=\"search\"\r\n            >\r\n                <SearchIcon/>\r\n            </IconButton>\r\n            <Divider className={classes.divider} orientation=\"vertical\"/>\r\n            <InputBase\r\n                value={value}\r\n                onChange={(e: ChangeEvent<HTMLInputElement>) => onChangeInput(e)}\r\n                className={classes.input}\r\n                placeholder=\"Search image by name\"\r\n                inputProps={{'aria-label': 'Search image by names'}}\r\n            />\r\n            <Divider className={classes.divider} orientation=\"vertical\"/>\r\n            {loading && <Preloader/>}\r\n        </Paper>\r\n    );\r\n}","import React from \"react\";\r\nimport {AppBar, Container, Toolbar} from \"@material-ui/core/\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {SearchPanel} from \"./FromContoroll/From\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n\r\n}));\r\nexport const Header = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <AppBar position=\"fixed\">\r\n            <Container fixed>\r\n                <Toolbar className={classes.root}>\r\n                    <SearchPanel/>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/404.c832212f.png\";","import {Container, makeStyles} from \"@material-ui/core\"\r\n\r\nimport React from \"react\";\r\nimport errorPage from '../../../assets/404.png';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n\r\n    cardMedia:{\r\n        textAlign: 'center'\r\n    },\r\n}))\r\n\r\n\r\nexport const DefaultContent = () => {\r\n\r\n    const classes = useStyle()\r\n    return <Container  className={classes.cardMedia}>\r\n        <img src={errorPage} alt=\"not found\"/>\r\n\r\n\r\n    </Container>\r\n}","\r\n\r\nexport const options = {\r\n    settings: {\r\n        overlayColor: \"rgba(0, 0, 0, 0.95)\",\r\n        autoplaySpeed: 1500,\r\n        transitionSpeed: 900,\r\n    },\r\n    buttons: {\r\n        backgroundColor: \"rgba(254,45,23,0.4)\",\r\n        iconColor: \"rgba(126, 172, 139, 0.8)\",\r\n    },\r\n    caption: {\r\n        captionColor: \"#a6cfa5\",\r\n        captionFontFamily: \"Raleway, sans-serif\",\r\n        captionFontWeight: \"300\",\r\n        captionTextTransform: \"uppercase\",\r\n    }\r\n};","import {Card,Grid, makeStyles} from \"@material-ui/core\"\r\nimport React from \"react\";\r\nimport {ImagesType} from \"../../../Contecst/TypesContecst\";\r\nimport {SRLWrapper} from \"simple-react-lightbox\";\r\nimport {options} from \"../../../assets/options\";\r\nimport styles from './ContentWithProps.module.css'\r\n\r\n\r\nconst useStyle = makeStyles(() => ({\r\n    card: {\r\n        width: '280px',\r\n        height: '160px',\r\n        animation: 'showImage 1s forwards ',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: \"56.25%\",\r\n\r\n    },\r\n    wrapperGrid: {\r\n        animation: 'showImage 1s forwards ',\r\n    }\r\n}))\r\n\r\n\r\n\r\ntype  propsType = {\r\n    img: Array<ImagesType>\r\n\r\n}\r\n\r\n\r\nexport const ContentWithProps: React.FC<propsType> = ({img}) => {\r\n\r\n\r\n    const classes = useStyle()\r\n    return (\r\n        <SRLWrapper options={options}>\r\n            <Grid className={classes.wrapperGrid} container spacing={4}>\r\n                {img.map(card => <Grid item key={card.id} xs={12} sm={6} md={4}>\r\n                    <Card className={classes.card}>\r\n                        <a className={styles.link} href={card.largeImageURL}>\r\n                            <img\r\n                                className={styles.wrapper}\r\n                                src={card.previewURL}\r\n                                alt={card.tags}/>\r\n                        </a>\r\n                    </Card>\r\n                </Grid>)}\r\n            </Grid>\r\n        </SRLWrapper>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/spiner.a55b80b8.svg\";","import {Container, makeStyles} from \"@material-ui/core\"\r\n\r\nimport React from \"react\";\r\nimport spiner from '../../../assets/spiner.svg';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n\r\n    cardMedia:{\r\n        textAlign: 'center'\r\n    },\r\n}))\r\n\r\n\r\nexport const PreloaderPage = () => {\r\n\r\n    const classes = useStyle()\r\n    return <Container  className={classes.cardMedia}>\r\n        <img src={spiner} alt=\"spinner\"/>\r\n\r\n\r\n    </Container>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Container} from \"@material-ui/core/\";\r\nimport {Button} from \"@material-ui/core/\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useData} from \"../../Contecst/DataContecst\";\r\nimport {DefaultContent} from \"./Content/DefoulContent\";\r\nimport {ContentWithProps} from \"./Content/ContentWithProps\";\r\nimport {ImagesType} from \"../../Contecst/TypesContecst\";\r\nimport {useHttp} from \"../../hook/useHttp\";\r\nimport {useAlert} from \"../../hook/useAlert\";\r\nimport * as Scroll from 'react-scroll';\r\nimport {Element} from 'react-scroll'\r\nimport {PreloaderPage} from \"./Content/PreloaderPage\";\r\n\r\n\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    mainContent: {\r\n        paddingTop: theme.spacing(10)\r\n    },\r\n    cardGrid: {\r\n        marginTop: theme.spacing(4),\r\n        textAlign: 'center'\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n\r\n}))\r\n\r\nexport const TableSection = () => {\r\n    const {request, error, loading, clearError} = useHttp() //наш запрос\r\n    const {SweetAlert} = useAlert() //всплывашка для ошибок\r\n    const {state, actions, dispatch}: any = useData() // контект\r\n\r\n    const [showBtn, setShowBtn] = useState(false)\r\n    const [imgS, setImgS] = useState<[] | Array<ImagesType>>([]) //сюда будем подгружать картинки из контекста\r\n    const [page, setPage] = useState<number>(1) // тут будем хранить конкренную страницу\r\n\r\n\r\n    //Показывает или прячем кнопку\r\n    useEffect(() => {\r\n\r\n        if (state.total > page * 12) {\r\n            setShowBtn(true)\r\n        } else {\r\n            setShowBtn(false)\r\n        }\r\n    }, [state.total, page])\r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        setImgS(state.images.filter((item, index, array) => {\r\n            // @ts-ignore\r\n            return index === array.findIndex(a => a.id === item.id)\r\n        }))\r\n        // Фильтруем массив полученных элементов на повторения. Так как при запросе бывает, что картинки повторяются, а key\r\n        // привязан к id картинки и реакт ругается\r\n        // куча игноров, так как до конца не разобрался с типизацией контекста\r\n    }, [state.images])\r\n// EseEffectoм привязались к обновлению стейта, что б при каждом чихе у нас был актуальный массив картинок\r\n\r\n    // При клике диспатчим страницу в стейт\r\n    const onChangePage = () => {\r\n        dispatch(actions.setCurrentPage(page + 1))\r\n        Scroll.scroller.scrollTo('scrollBtn', {\r\n            duration: 1500,\r\n            delay: 100,\r\n            smooth: true,\r\n            offset: 50,\r\n        })\r\n    }\r\n    //Подписавшись на обновления конкретной страницы в стейте обновляем наш локальный стейт\r\n    useEffect(() => {\r\n        setPage(state.currentPage)\r\n    }, [state.currentPage])\r\n\r\n\r\n    //Подписавшись на обновление локального стейта (кокда страница будет изменена) будем делать запрос на сервер за новой порцией картинок\r\n    useEffect(() => {\r\n        const addImage = async () => {\r\n            try {\r\n                const images = await request(state.searchValue, page)\r\n                dispatch(actions.setImage({images: images.hits, total: images.total}))\r\n            } catch (e) {\r\n                throw e\r\n            }\r\n        }\r\n        addImage()\r\n    }, [page])\r\n\r\n    SweetAlert(error, clearError) // Опять же, если есть ошибки информируем.\r\n\r\n\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <div className={classes.mainContent}>\r\n            <Container className={classes.cardGrid} maxWidth=\"md\">\r\n\r\n                {imgS.length > 0 ?\r\n                        <ContentWithProps img={imgS}/>\r\n                    :\r\n                    loading ?\r\n                        <PreloaderPage/> :\r\n                        <DefaultContent/>\r\n\r\n                }\r\n                {showBtn &&\r\n                <Element name='scrollBtn'>\r\n                    <Button\r\n                        disabled={loading}\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={onChangePage}\r\n                    >\r\n                        load more\r\n                    </Button>\r\n                </Element>\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport Footer from './Component/Footer/Footer';\nimport {Header} from \"./Component/Header/Header\";\nimport { TableSection } from './Component/Main/Main';\n\n\nfunction App() {\n  return (\n    <>\n     <Header/>\n     <TableSection/>\n     <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {DataProvider} from \"./Contecst/DataContecst\";\nimport SimpleReactLightbox from 'simple-react-lightbox'\n\nReactDOM.render(\n    <React.StrictMode>\n        <DataProvider>\n            <SimpleReactLightbox>\n                <App/>\n            </SimpleReactLightbox>\n        </DataProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}